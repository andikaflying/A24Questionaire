{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid301\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid401\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid501\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid601\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid701\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid801\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid901\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1001\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1301\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid14}
{\list\listtemplateid15\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1401\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid15}
{\list\listtemplateid16\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1501\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid16}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}{\listoverride\listid15\listoverridecount0\ls15}{\listoverride\listid16\listoverridecount0\ls16}}
{\info
{\author Andika Kurniawan}}\margl1440\margr1440\vieww25980\viewh16000\viewkind1\viewscale147
\deftab720
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0

\f0\fs22 \cf0 Please answer the questions below.\
\
Where we ask for you to provide code, this code can just be \'91pseudo code\'92 and does not have to be executable.\
\
The idea of these questions are basically just to get an idea of your understanding.  You are allowed to skip questions if you cannot answer but of course the more you can answer the better.\
\
Completing all the tasks should not take more than an hour to an hour and a half.  \
\
Please create a repo on github to host your answers and test code.  You can either do this on your own public repo or share \'91kkroese\'92 and \'91devblazer\'92 on your private github repo.  Please do not include any OS specific files like microsoft word documents.  Also do not commit binary files like zip, tar or gz files.\
\
Please send the link to your repository to Kevin.\
\
\
Javascript:\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls1\ilvl0\cf0 1.	What is your favourite new javascript feature and why?\uc0\u8232 String.replaceAll(), because I can replace some words in a string simpler\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls2\ilvl0\cf0 2.	Explain an interesting way in which you have used this javascript feature.\uc0\u8232 For example, there is a string variable that contains a long paragraph. I don't need to trim and loop to replace some text. I just use replaceAll() which is simpler.\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls3\ilvl0\cf0 3.	Is there any difference between regular function syntax and the shorter arrow function syntax? (Write the answer in your own words)\uc0\u8232 Yes, the syntax writing. I think the shorter arrow function is simpler than the regular function. And programmer can create many functions simpler with the arrow function than a regular function.\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls4\ilvl0\cf0 4.	What is the difference between \'91myFunctionCall(++foo)\'92   and  \'91myFunctionCall(foo++)\'92\uc0\u8232 myFunctionCall(++foo) means the parameter is already increased, while myFunctionCall(foo++) means the parameter is not increased\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls5\ilvl0\cf0 5.	In your own words, explain what a javascript \'91class\'92 is and how it differs from a function.\uc0\u8232 Javascript class is a container that is used in an object-oriented structure. The class can contain variables, functions, and constructors. The difference with function is you can create variables and functions in one container and follow the object-oriented concept.\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\
Css:\
\
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls6\ilvl0\cf0 6.	In your own words, explain css specificity.\uc0\u8232 CSS describes how HTML elements are to be displayed on the screen, paper, or in other media and CSS controls how the view on screen and other media. \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls7\ilvl0\cf0 7.	In your own words, explain, what is \'91!important\'92 in css.  Also how does it work?  Are there any special circumstances when using it, where it\'92s behaviour might not be what you expect?\uc0\u8232 \'91!important\'92 means the selected style will be prioritized first. The special circumstances are when we use some theme or template, we will modify some view, some view can\'92t be modified because it uses existing css, the \'91!important\'92 allow us to modify the style. \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls8\ilvl0\cf0 8.	What is your prefered layout system: inline-block, floating + clearing, flex, grid, other?  And why?\uc0\u8232 Flex, because it\'92s easy to organize element sand it makes easy to solve many cases like centering an element horizontally or vertically. \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls9\ilvl0\cf0 9.	Are negative margins legal and what do they do (margin: -20px)?\uc0\u8232 Legal, it makes element position is out of its box.  \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls10\ilvl0\cf0 10.	If a <div/> has no margin or other styling and a <p/> tag inside of it has a margin top of some kind, the margin from the <p/> tag will show up on the div instead (the margin will show above the div not inside of it), why is this?  What are the different things that can be done to prevent it?\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0
\cf0 Because <p> is not actually inside <div/>. This can be prevented by adding \'91overflow:hidden\'92 in <div/>\uc0\u8232 \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 Unit tests:\
\
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls11\ilvl0\cf0 11.	What technologies do you use to unit test your react components?\uc0\u8232 react testing libraries, enzyme, and jest\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls12\ilvl0\cf0 12.	Are there any pitfalls associated with this technology that have caused you difficulty in the past?\uc0\u8232 No\
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls13\ilvl0\cf0 13.	How do you test in your unit tests to see if the correct properties are being passed to child components.\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0
\cf0 Using .state to check the properties and check its value equal with the desired value\uc0\u8232 \
\pard\pardeftab720\ri0\sl276\slmult1\partightenfactor0
\cf0 React:\
\
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls14\ilvl0\cf0 14.	React test step1:\uc0\u8232 \u8232 Create a react component that has a <div/> with a border.\u8232 Inside this <div/> should be a <span/> that displays the \'91live\'92 width of the browser window at all times.  Keep in mind that the size of the window could easily be changed by the user and you should reflect this.\u8232 \
\pard\pardeftab720\li709\ri0\sl360\partightenfactor0

\f1\fs18 \cf0 import React, \{ Component \} from 'react'\
\
class SomeComponent extends Component \{\
    constructor(props) \{\
        super(props);\
        this.state = \{ width: 0 \};\
        this.updateWidth = this.updateWidth.bind(this);\
    \}\
      \
    componentDidMount() \{\
        this.updateWidth();\
        window.addEventListener('check width', this.updateWidth);\
    \}\
      \
    componentWillUnmount() \{\
        window.removeEventListener('check width', this.updateWidth);\
    \}\
      \
    updateWidth() \{\
        this.setState(\{ width: window.innerWidth\});\
    \}\
    \
    render() \{\
        let divStyle = \{\
            border: 'black 1px solid'\
        \};\
\
        return ( \
            <div style=\{divStyle\}>\
                Width : \{this.state.width\}\
            </div>\
        );\
    \}\
\}\
\
export default SomeComponent;\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0

\f0\fs22 \cf0 \
\
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls15\ilvl0\cf0 15.	React test step2:\uc0\u8232 \u8232 Inside the <div/> you created in the previous step, add a text input that, as a number is entered into it, uses that number to set the height of the div itself in pixels, live as you update the text field (keypress not change event).\u8232 \
\pard\pardeftab720\li709\ri0\sl360\partightenfactor0

\f1\fs18 \cf0 import React, \{ Component \} from 'react'\
\
class SomeComponent extends Component \{\
    constructor(props) \{\
        super(props);\
        this.state = \{ width: 0, height: 100 \};\
        this.updateWidth = this.updateWidth.bind(this);\
    \}\
      \
    componentDidMount() \{\
        this.updateWidth();\
        window.addEventListener('check width', this.updateWidth);\
    \}\
      \
    componentWillUnmount() \{\
        window.removeEventListener('check width', this.updateWidth);\
    \}\
      \
    updateWidth() \{\
        this.setState(\{ width: window.innerWidth\});\
    \}\
\
	    updateHeight(event) \{\
		this.setState(\{ height: event.target.value\});\
    \}\
    \
    render() \{\
        let divStyle = \{\
            border: 'black 1px solid',\
		     height: this.state.height,\
        \};\
\
        return ( \
            <div style=\{divStyle\}>\
                Width : \{this.state.width\} <br />\
                <input type='text' onKeyPress=\{this.updateHeight.bind(this)\} />\
            </div>\
        );\
    \}\
\}\
\
export default SomeComponent;\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0

\f0\fs22 \cf0 \
\pard\pardeftab720\li720\fi-360\ri0\sl276\slmult1\partightenfactor0
\ls16\ilvl0\cf0 16.	React test step3:\uc0\u8232 \u8232 Add the following code to your project root (same project as in step 2, but add the code in the global / window space):  \u8232 \u8232     Let divHeight;\u8232     window.setDivHeight = (height) => divHeight = height;\u8232 \u8232 Add a HOC for your div component that allows you to set the height of your <div/> component from the previous steps by calling that external function.\u8232 \u8232 If you do not know what a HOC is or how to create one, that is also fine, just mention that in your answer and instead create a parent component that can still do this (allow you to call that function \'91setDivHeight\'92 in order to set the height of the div manually.\u8232 \u8232 Bare in mind that when the height of the div is forcefully set like this, the text fields value should also update to reflect this and should still carry on working as normal (user can continue to modify its value).\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0
\cf0 \
\
SomeComponent.js\
\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0

\f1\fs18 \cf0 import React, \{ Component \} from 'react'\
import withSetHeight from './withSetHeight'\
\
class SomeComponent extends Component \{\
    constructor(props) \{\
        super(props);\
        this.state = \{ width: 0 \};\
        this.updateWidth = this.updateWidth.bind(this);\
    \}\
      \
    componentDidMount() \{\
        this.updateWidth();\
        window.addEventListener('check width', this.updateWidth);\
    \}\
      \
    componentWillUnmount() \{\
        window.removeEventListener('check width', this.updateWidth);\
    \}\
      \
    updateWidth() \{\
        this.setState(\{ width: window.innerWidth\});\
    \}\
    \
    render() \{ \
        const \{ height, updateHeight \} = this.props\
\
        let divStyle = \{\
            border: 'black 1px solid',\
            height: height,\
            backgroundColor: 'red'\
        \};\
\
        return ( \
            <div style=\{divStyle\} >\
                Width : \{this.state.width\} <br />\
                <input type='text' onKeyPress=\{updateHeight\} />\
            </div>\
        );\
    \}\
\}\
\
export default withSetHeight(SomeComponent, 400);\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0

\f0\fs22 \cf0 \
\
withSetHeight.js (HOC) : \
\
\pard\pardeftab720\li720\ri0\sl276\slmult1\partightenfactor0

\f1\fs18 \cf0 import React from 'react'\
\
const withSetHeight = (WrappedComponent, targetHeight) => \{\
	class WithSetHeight extends React.Component \{\
		constructor(props) \{\
			super(props)\
\
			this.state = \{\
				height: targetHeight\
			\}\
		\}\
\
		updateHeight = (event) => \{\
			this.setState(\{height: event.target.value\})\
		\}\
\
        render() \{\
            console.log(this.state.height)\
            return (\
                    <WrappedComponent\
                        height=\{this.state.height\}\
                        updateHeight=\{this.updateHeight\}\
                        \{...this.props\}\
                    />\
            )\
        \}\
	\}\
	return WithSetHeight\
\}\
\
export default withSetHeight\
}